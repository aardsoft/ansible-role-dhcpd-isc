- set_fact:
    role_packages:
      - dhcp-server

# installing grub2-efi on a BIOS boot machine will break things, but
# the assumption is all of those are dead nowadays.
- set_fact:
    dhcp_boot_packages:
      - syslinux
      - tftp-server
      - shim
      - grub2-efi
  when: ansible_os_family == "RedHat"

- set_fact:
    dhcp_boot: "no"
  when: dhcp_boot is undefined

- set_fact:
    dhcp_boot_packages:
      - syslinux
      - tftpboot-installation-common
      - shim
      - grub2-x86_64-efi
  when: ansible_os_family == "Suse"

- set_fact:
    role_packages: "{{ role_packages + dhcp_boot_packages }}"
  when: dhcp_boot_packages is defined and dhcp_boot == "yes"

- set_fact:
    _default_dhcpd_isc_conf: /etc/dhcp/dhcpd.conf
  when: ansible_os_family != "Suse"

- set_fact:
    _default_dhcpd_isc_conf: /etc/dhcpd.conf
  when: ansible_os_family == "Suse"

- set_fact:
    _default_dhcpd_isc_conf: "{{dhcpd_isc_conf}}"
  when: dhcpd_isc_conf is defined

- include_role:
    name: data-utilities
    tasks_from: install_packages

- name: update dhcpd configuration
  template:
    src: dhcpd.conf.j2
    dest: "{{dhcpd.conf | default(_default_dhcpd_isc_conf)}}"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart dhcpd

- name: add dhcpd sysconfig file
  template:
    src: dhcpd-sysconfig.j2
    dest: /etc/sysconfig/dhcpd
    owner: root
    group: root
    mode: 0644
  notify:
    - restart dhcpd
  when: ansible_os_family == "Suse"

- include_tasks: dhcp_shim_config.yml

- set_fact:
    tftpboot_shim_source: "{{ tftpboot_custom_pxe_shim }}"
    tftpboot_remote_shim: no
  when: tftpboot_custom_pxe_shim is defined

- set_fact:
    tftpboot_grub_source: "{{ tftpboot_custom_pxe_grub }}"
    tftpboot_remote_grub: no
  when: tftpboot_custom_pxe_grub is defined

- name: copy EFI shim (PXE)
  copy:
    src: "{{tftpboot_shim_source}}"
    dest: "{{ tftpboot_directory | default('/tftpboot') }}/"
    remote_src: "{{ tftpboot_remote_shim | default(true) }}"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes"

- name: copy EFI bootloader (PXE)
  copy:
    src: "{{tftpboot_grub_source}}"
    dest: "{{ tftpboot_directory | default('/tftpboot') }}/"
    remote_src: "{{ tftpboot_remote_grub | default(true) }}"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes"

- name: create bootloader config directory (PXE)
  file:
    path: "{{ tftpboot_directory | default('/tftpboot') }}/{{ tftpboot_grub_cfg_directory }}"
    state: directory
    mode: 0755
    owner: root
  when: dhcp_boot == "yes"

# the grub-netboot.cfg needs to come from inside the playbook
- name: copy bootloader config (PXE)
  vars:
    uefi_http_prefix: ""
  template:
    src: grub-netboot.cfg.j2
    dest: "{{ tftpboot_directory | default('/tftpboot') }}/{{ tftpboot_grub_cfg_directory}}/grub.cfg"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes"

- name: create combustion directory (PXE)
  file:
    state: directory
    dest: "{{ tftpboot_directory | default('/tftpboot') }}/combustion"
    mode: 0755
    owner: root
  when: dhcp_boot == "yes"

- name: copy combustion template (PXE)
  template:
    src: combustion.j2
    dest: "{{ tftpboot_directory | default('/tftpboot') }}/combustion/script"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes"

- include_tasks: dhcp_shim_config.yml

- set_fact:
    tftpboot_shim_source: "{{ tftpboot_custom_http_shim }}"
    tftpboot_remote_shim: no
  when: tftpboot_custom_http_shim is defined

- set_fact:
    tftpboot_grub_source: "{{ tftpboot_custom_http_grub }}"
    tftpboot_remote_grub: no
  when: tftpboot_custom_http_grub is defined

- name: copy EFI shim (HTTP)
  copy:
    src: "{{tftpboot_shim_source}}"
    dest: "{{ uefi_http_boot_directory }}/"
    remote_src: "{{ tftpboot_remote_shim | default(true) }}"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes" and uefi_http_boot_directory is defined

- name: copy EFI bootloader (HTTP)
  copy:
    src: "{{tftpboot_grub_source}}"
    dest: "{{ uefi_http_boot_directory }}/"
    remote_src: "{{ tftpboot_remote_grub | default(true) }}"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes" and uefi_http_boot_directory is defined

- name: copy bootloader config (HTTP)
  template:
    src: grub-netboot.cfg.j2
    dest: "{{ uefi_http_boot_directory }}/grub.cfg"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes" and uefi_http_boot_directory is defined

- name: create combustion directory (HTTP)
  file:
    state: directory
    dest: "{{ uefi_http_boot_directory }}/combustion"
    mode: 0755
    owner: root
  when: dhcp_boot == "yes" and uefi_http_boot_directory is defined

- name: copy combustion template (HTTP)
  template:
    src: combustion.j2
    dest: "{{ uefi_http_boot_directory }}/combustion/script"
    mode: 0644
    owner: root
  when: dhcp_boot == "yes" and uefi_http_boot_directory is defined

- name: copy bootloader files
  include_tasks: copy_bootloader_files.yml
  when: >
    dhcp_boot == "yes" and
    netboot is defined and netboot.os is defined
  with_dict: "{{netboot.os}}"
  loop_control:
    loop_var: _os_entry

- name: configure firewall for dhcp
  firewalld:
    service: dhcp
    permanent: true
    state: enabled
    immediate: true
    zone: "{{item}}"
  with_items: "{{dhcp_firewall_zones|default([])}}"
  when: >
    (firewalld_available is defined and
    firewalld_available == True)

- name: configure firewall for tftp
  firewalld:
    service: tftp
    permanent: true
    state: enabled
    immediate: true
    zone: "{{item}}"
  with_items: "{{netboot.firewall_zones|default([])}}"
  when: >
    (firewalld_available is defined and
    firewalld_available == True)

- name: configure firewall
  firewalld:
    service: dhcp
    permanent: true
    state: enabled
    immediate: true
  when: ansible_os_family == "RedHat"

- name: enable tftp socket
  service: name=tftp.socket enabled=yes
  notify: restart tftp
  when: dhcp_boot == "yes"

- name: enable dhcpd
  service: name=dhcpd enabled=yes
